
class Node(ApiBase):

    def __init__(self, node_name: str, bus: MessageBus = None, use_systembus=True) -> None:
        super().__init__(bus, use_systembus)

        self.node_name = node_name
        self.node_proxy = None
    
    def get_proxy(self) -> InterfaceProxy | ObjectProxy:
        if self.node_proxy is None:
            manager = self.bus.get_proxy(
            HIRTE_DBUS_INTERFACE,
            HIRTE_OBJECT_PATH
            )

            node_path = manager.GetNode(self.node_name)
            self.node_proxy = self.bus.get_proxy(
                HIRTE_DBUS_INTERFACE,
                node_path
            )
        
        return self.node_proxy


    {%- include 'skeleton_method.tmpl' %}
    {%- include 'skeleton_signal.tmpl' %}
    {%- include 'skeleton_property.tmpl' %}


class ApiBase:

    def __init__(self, interface: str, object_path: str, bus: MessageBus = None, use_systembus=True) -> None:
        self.interface = interface
        self.object_path = object_path
        self.use_systembus = use_systembus

        if bus is not None:
            self.bus = bus
        elif self.use_systembus:
            self.bus = SystemMessageBus()
        else:
            self.bus = SessionMessageBus()
        
        self.cached_proxy = None
        self.cached_properties_proxy = None
    
    def get_proxy(self) -> InterfaceProxy | ObjectProxy:
        if self.cached_proxy is None:
            self.cached_proxy = self.bus.get_proxy(
                self.interface,
                self.object_path,
            )

        return self.cached_proxy

    def get_properties_proxy(self) -> InterfaceProxy | ObjectProxy:
        if self.cached_properties_proxy is None:
            self.cached_properties_proxy = self.bus.get_proxy(
                self.interface,
                self.object_path,
                DBUS_PROPERTIES_INTERFACE
            )

        return self.cached_properties_proxy
